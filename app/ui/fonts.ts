/**
 * Layout Shift
 * 브라우저에 기본적으로 탑재되어 있는 폰트 이외의, 웹페이지에서 별도의 폰트를 사용하려할 경우 폰트 파일 로딩하는 데에도 delay 발생
 * 특히 CSR 환경에서 이런 delay는 layout shift 과정에서 글자 깜빡임이나, layout collapse를 발생시킬 수 있음.
 * 
 * 이미지도 마찬가지. 정적인 이미지 에셋을 렌더링 하는 과정에서 컴포넌트가 감싸고 있는 영역이 이미지 로딩을 통해서 변경될 수 있음.
 * 같은 도메인 주소 내에서 설정되어있는 이미지의 경우 로드에 부하가 거의 없을 수 있지만, cross origin의 경우 충분히 이미지 로딩이 발생할 수 있음.
 * 
 * 개선방법
 * 1. 렌더링 이후 로딩이 시작되는 경우, 네트워크 환경에 영향을 받지 않는 부분에서의 UX개선. 
 * 컴포넌트의 에셋 로딩 상태를 파악해서 스켈레톤 UI를 보여주거나, alt 값을 출력하는 등의 방법.
 * 2. 컴포넌트 렌더링 이전에 로딩을 완료하도록 하는 방법.
 * 스켈레톤 UI 등의 대체 레이아웃을 지정해줄 필요가 없어지지만, 초기 로딩 시간이 증가할 수 있다는 단점.
 */

/**
 * Optimizing Fonts and Images
 * 
 * 넥스트의 경우 두 번째 개선방법을 택함. 정적인 폰트와 이미지의 로드가 페이지 렌더링 이전에 완료되도록 하여 유저에게 데이터가 없는 컴포넌트를 보여주지 않는 것.
 * next/font 모듈을 사용할 경우, 유저가 URL에 접근해서 유저에게 보여주기 위한 html 파일을 Next 서버에서 빌드하는 동안 정적인 에셋들을 유저에게 전송해놓음으로써 추가적인 네트워크 요청 없이도 에셋들을 효율적으로 유저에게 전달가능
 */

import { Inter, Lusitana } from 'next/font/google'

export const inter = Inter( { subsets: ['latin'] })

export const lusitana = Lusitana({
  subsets: ['latin'],
  weight: ['400', '700']
})
